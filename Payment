import java.util.*;
public class Payment {
    protected double total;
    private static double totalSales = 0.0;
    private static double highestSale = Double.MIN_VALUE;
    private static double lowestSale = Double.MAX_VALUE;
    protected double amt;
    private double change = 0.0;
    private char opt;
    private Food foodMenu;
    private Beverages beverageMenu;
    protected double tprice;
    int cardNum = 0;

    private Scanner input = new Scanner(System.in);

    public double getTotal() { return total; }
    public double getTotalSales() { return totalSales; }
    public Payment(Order order){}
    
    public Payment(double tprice,  double total) {
        this.total = total;
        this.tprice = tprice;

    }

    public void payMethod(){
        System.out.println("\nHow would you like to pay?");
        System.out.println("[1] Cash");
        System.out.println("[2] Card (10% discount)");
        
        boolean validOption = false;
        do{
            System.out.print("Choose option: ");
            int payOpt = input.nextInt();
            
            String result;
            double paymentAmount = tprice;

            switch (payOpt) {
                case 1 :
                    boolean paid = false;
                    do{
                        System.out.print("Enter amount: RM");
                        amt = input.nextDouble();
                        input.nextLine();
                        Cash cash = new Cash(tprice, total, amt);
                        result = cash.payByCash();
                        System.out.println(result);
                    
                        if(!result.equals("Money not enough to pay.")){
                            updateSaleStats(this.total);
                            paid = true;
                        }else{
                            System.out.println("Please enter a valid amount.");
                        }
                    }while(!paid);
                    validOption = true;
                    break;

                case 2: 
                
                    Card card = new Card(tprice, total, cardNum);
                    result = card.payByCard();
                    double discountedPrice = tprice * 0.9;
                    updateSaleStats(discountedPrice);
                    System.out.println(result);
                    validOption = true;
                    break;
               

                default: 
                    System.out.println("Invalid payment option selected.");
                    break;
            }
        }while(!validOption);

    }

    public double getTprice(){return tprice;}
    
    private static void updateSaleStats(double amount) {
        if (amount > highestSale) highestSale = amount;
        if (amount < lowestSale) lowestSale = amount;
        totalSales += amount;
    }

    public double getHighestSale() { return highestSale; }
    public double getLowestSale() { return lowestSale; }

}
